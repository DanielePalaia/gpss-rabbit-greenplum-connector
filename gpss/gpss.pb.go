// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gpss.proto

package gpss

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Operation mode
type Operation int32

const (
	Operation_Insert Operation = 0
	Operation_Merge  Operation = 1
	Operation_Update Operation = 2
	Operation_Read   Operation = 3
)

var Operation_name = map[int32]string{
	0: "Insert",
	1: "Merge",
	2: "Update",
	3: "Read",
}

var Operation_value = map[string]int32{
	"Insert": 0,
	"Merge":  1,
	"Update": 2,
	"Read":   3,
}

func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}

func (Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{0}
}

type RelationType int32

const (
	RelationType_Table    RelationType = 0
	RelationType_View     RelationType = 1
	RelationType_Index    RelationType = 2
	RelationType_Sequence RelationType = 3
	RelationType_Special  RelationType = 4
	RelationType_Other    RelationType = 255
)

var RelationType_name = map[int32]string{
	0:   "Table",
	1:   "View",
	2:   "Index",
	3:   "Sequence",
	4:   "Special",
	255: "Other",
}

var RelationType_value = map[string]int32{
	"Table":    0,
	"View":     1,
	"Index":    2,
	"Sequence": 3,
	"Special":  4,
	"Other":    255,
}

func (x RelationType) String() string {
	return proto.EnumName(RelationType_name, int32(x))
}

func (RelationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{1}
}

// Connect service Request message
type ConnectRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	DB                   string   `protobuf:"bytes,5,opt,name=DB,proto3" json:"DB,omitempty"`
	UseSSL               bool     `protobuf:"varint,6,opt,name=UseSSL,proto3" json:"UseSSL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{0}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ConnectRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ConnectRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ConnectRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ConnectRequest) GetDB() string {
	if m != nil {
		return m.DB
	}
	return ""
}

func (m *ConnectRequest) GetUseSSL() bool {
	if m != nil {
		return m.UseSSL
	}
	return false
}

// Connect service Response message
type Session struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{1}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

// Required parameters of the Insert operation
type InsertOption struct {
	InsertColumns        []string `protobuf:"bytes,1,rep,name=InsertColumns,proto3" json:"InsertColumns,omitempty"`
	TruncateTable        bool     `protobuf:"varint,2,opt,name=TruncateTable,proto3" json:"TruncateTable,omitempty"`
	ErrorLimitCount      int64    `protobuf:"varint,4,opt,name=ErrorLimitCount,proto3" json:"ErrorLimitCount,omitempty"`
	ErrorLimitPercentage int32    `protobuf:"varint,5,opt,name=ErrorLimitPercentage,proto3" json:"ErrorLimitPercentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertOption) Reset()         { *m = InsertOption{} }
func (m *InsertOption) String() string { return proto.CompactTextString(m) }
func (*InsertOption) ProtoMessage()    {}
func (*InsertOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{2}
}

func (m *InsertOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertOption.Unmarshal(m, b)
}
func (m *InsertOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertOption.Marshal(b, m, deterministic)
}
func (m *InsertOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertOption.Merge(m, src)
}
func (m *InsertOption) XXX_Size() int {
	return xxx_messageInfo_InsertOption.Size(m)
}
func (m *InsertOption) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertOption.DiscardUnknown(m)
}

var xxx_messageInfo_InsertOption proto.InternalMessageInfo

func (m *InsertOption) GetInsertColumns() []string {
	if m != nil {
		return m.InsertColumns
	}
	return nil
}

func (m *InsertOption) GetTruncateTable() bool {
	if m != nil {
		return m.TruncateTable
	}
	return false
}

func (m *InsertOption) GetErrorLimitCount() int64 {
	if m != nil {
		return m.ErrorLimitCount
	}
	return 0
}

func (m *InsertOption) GetErrorLimitPercentage() int32 {
	if m != nil {
		return m.ErrorLimitPercentage
	}
	return 0
}

// Required parameters of the Update operation
type UpdateOption struct {
	MatchColumns         []string `protobuf:"bytes,1,rep,name=MatchColumns,proto3" json:"MatchColumns,omitempty"`
	UpdateColumns        []string `protobuf:"bytes,2,rep,name=UpdateColumns,proto3" json:"UpdateColumns,omitempty"`
	Condition            string   `protobuf:"bytes,3,opt,name=Condition,proto3" json:"Condition,omitempty"`
	ErrorLimitCount      int64    `protobuf:"varint,4,opt,name=ErrorLimitCount,proto3" json:"ErrorLimitCount,omitempty"`
	ErrorLimitPercentage int32    `protobuf:"varint,5,opt,name=ErrorLimitPercentage,proto3" json:"ErrorLimitPercentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateOption) Reset()         { *m = UpdateOption{} }
func (m *UpdateOption) String() string { return proto.CompactTextString(m) }
func (*UpdateOption) ProtoMessage()    {}
func (*UpdateOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{3}
}

func (m *UpdateOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOption.Unmarshal(m, b)
}
func (m *UpdateOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOption.Marshal(b, m, deterministic)
}
func (m *UpdateOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOption.Merge(m, src)
}
func (m *UpdateOption) XXX_Size() int {
	return xxx_messageInfo_UpdateOption.Size(m)
}
func (m *UpdateOption) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOption.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOption proto.InternalMessageInfo

func (m *UpdateOption) GetMatchColumns() []string {
	if m != nil {
		return m.MatchColumns
	}
	return nil
}

func (m *UpdateOption) GetUpdateColumns() []string {
	if m != nil {
		return m.UpdateColumns
	}
	return nil
}

func (m *UpdateOption) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *UpdateOption) GetErrorLimitCount() int64 {
	if m != nil {
		return m.ErrorLimitCount
	}
	return 0
}

func (m *UpdateOption) GetErrorLimitPercentage() int32 {
	if m != nil {
		return m.ErrorLimitPercentage
	}
	return 0
}

// Required parameters of the Merge operation
// Merge operation creates a session-level temp table in StagingSchema
type MergeOption struct {
	InsertColumns        []string `protobuf:"bytes,1,rep,name=InsertColumns,proto3" json:"InsertColumns,omitempty"`
	MatchColumns         []string `protobuf:"bytes,2,rep,name=MatchColumns,proto3" json:"MatchColumns,omitempty"`
	UpdateColumns        []string `protobuf:"bytes,3,rep,name=UpdateColumns,proto3" json:"UpdateColumns,omitempty"`
	Condition            string   `protobuf:"bytes,4,opt,name=Condition,proto3" json:"Condition,omitempty"`
	ErrorLimitCount      int64    `protobuf:"varint,5,opt,name=ErrorLimitCount,proto3" json:"ErrorLimitCount,omitempty"`
	ErrorLimitPercentage int32    `protobuf:"varint,6,opt,name=ErrorLimitPercentage,proto3" json:"ErrorLimitPercentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MergeOption) Reset()         { *m = MergeOption{} }
func (m *MergeOption) String() string { return proto.CompactTextString(m) }
func (*MergeOption) ProtoMessage()    {}
func (*MergeOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{4}
}

func (m *MergeOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeOption.Unmarshal(m, b)
}
func (m *MergeOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeOption.Marshal(b, m, deterministic)
}
func (m *MergeOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeOption.Merge(m, src)
}
func (m *MergeOption) XXX_Size() int {
	return xxx_messageInfo_MergeOption.Size(m)
}
func (m *MergeOption) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeOption.DiscardUnknown(m)
}

var xxx_messageInfo_MergeOption proto.InternalMessageInfo

func (m *MergeOption) GetInsertColumns() []string {
	if m != nil {
		return m.InsertColumns
	}
	return nil
}

func (m *MergeOption) GetMatchColumns() []string {
	if m != nil {
		return m.MatchColumns
	}
	return nil
}

func (m *MergeOption) GetUpdateColumns() []string {
	if m != nil {
		return m.UpdateColumns
	}
	return nil
}

func (m *MergeOption) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *MergeOption) GetErrorLimitCount() int64 {
	if m != nil {
		return m.ErrorLimitCount
	}
	return 0
}

func (m *MergeOption) GetErrorLimitPercentage() int32 {
	if m != nil {
		return m.ErrorLimitPercentage
	}
	return 0
}

// Open service Request message
type OpenRequest struct {
	Session       *Session `protobuf:"bytes,1,opt,name=Session,proto3" json:"Session,omitempty"`
	SchemaName    string   `protobuf:"bytes,2,opt,name=SchemaName,proto3" json:"SchemaName,omitempty"`
	TableName     string   `protobuf:"bytes,3,opt,name=TableName,proto3" json:"TableName,omitempty"`
	PreSQL        string   `protobuf:"bytes,4,opt,name=PreSQL,proto3" json:"PreSQL,omitempty"`
	PostSQL       string   `protobuf:"bytes,5,opt,name=PostSQL,proto3" json:"PostSQL,omitempty"`
	Timeout       int32    `protobuf:"varint,6,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Encoding      string   `protobuf:"bytes,7,opt,name=Encoding,proto3" json:"Encoding,omitempty"`
	StagingSchema string   `protobuf:"bytes,8,opt,name=StagingSchema,proto3" json:"StagingSchema,omitempty"`
	// Types that are valid to be assigned to Option:
	//	*OpenRequest_InsertOption
	//	*OpenRequest_UpdateOption
	//	*OpenRequest_MergeOption
	Option               isOpenRequest_Option `protobuf_oneof:"Option"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{5}
}

func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (m *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(m, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

func (m *OpenRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *OpenRequest) GetSchemaName() string {
	if m != nil {
		return m.SchemaName
	}
	return ""
}

func (m *OpenRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *OpenRequest) GetPreSQL() string {
	if m != nil {
		return m.PreSQL
	}
	return ""
}

func (m *OpenRequest) GetPostSQL() string {
	if m != nil {
		return m.PostSQL
	}
	return ""
}

func (m *OpenRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *OpenRequest) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *OpenRequest) GetStagingSchema() string {
	if m != nil {
		return m.StagingSchema
	}
	return ""
}

type isOpenRequest_Option interface {
	isOpenRequest_Option()
}

type OpenRequest_InsertOption struct {
	InsertOption *InsertOption `protobuf:"bytes,100,opt,name=InsertOption,proto3,oneof"`
}

type OpenRequest_UpdateOption struct {
	UpdateOption *UpdateOption `protobuf:"bytes,101,opt,name=UpdateOption,proto3,oneof"`
}

type OpenRequest_MergeOption struct {
	MergeOption *MergeOption `protobuf:"bytes,102,opt,name=MergeOption,proto3,oneof"`
}

func (*OpenRequest_InsertOption) isOpenRequest_Option() {}

func (*OpenRequest_UpdateOption) isOpenRequest_Option() {}

func (*OpenRequest_MergeOption) isOpenRequest_Option() {}

func (m *OpenRequest) GetOption() isOpenRequest_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *OpenRequest) GetInsertOption() *InsertOption {
	if x, ok := m.GetOption().(*OpenRequest_InsertOption); ok {
		return x.InsertOption
	}
	return nil
}

func (m *OpenRequest) GetUpdateOption() *UpdateOption {
	if x, ok := m.GetOption().(*OpenRequest_UpdateOption); ok {
		return x.UpdateOption
	}
	return nil
}

func (m *OpenRequest) GetMergeOption() *MergeOption {
	if x, ok := m.GetOption().(*OpenRequest_MergeOption); ok {
		return x.MergeOption
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OpenRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OpenRequest_InsertOption)(nil),
		(*OpenRequest_UpdateOption)(nil),
		(*OpenRequest_MergeOption)(nil),
	}
}

type DBValue struct {
	// Types that are valid to be assigned to DBType:
	//	*DBValue_Int32Value
	//	*DBValue_Int64Value
	//	*DBValue_Float32Value
	//	*DBValue_Float64Value
	//	*DBValue_StringValue
	//	*DBValue_BytesValue
	//	*DBValue_TimeStampValue
	//	*DBValue_NullValue
	DBType               isDBValue_DBType `protobuf_oneof:"DBType"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DBValue) Reset()         { *m = DBValue{} }
func (m *DBValue) String() string { return proto.CompactTextString(m) }
func (*DBValue) ProtoMessage()    {}
func (*DBValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{6}
}

func (m *DBValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBValue.Unmarshal(m, b)
}
func (m *DBValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBValue.Marshal(b, m, deterministic)
}
func (m *DBValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBValue.Merge(m, src)
}
func (m *DBValue) XXX_Size() int {
	return xxx_messageInfo_DBValue.Size(m)
}
func (m *DBValue) XXX_DiscardUnknown() {
	xxx_messageInfo_DBValue.DiscardUnknown(m)
}

var xxx_messageInfo_DBValue proto.InternalMessageInfo

type isDBValue_DBType interface {
	isDBValue_DBType()
}

type DBValue_Int32Value struct {
	Int32Value int32 `protobuf:"varint,1,opt,name=Int32Value,proto3,oneof"`
}

type DBValue_Int64Value struct {
	Int64Value int64 `protobuf:"varint,2,opt,name=Int64Value,proto3,oneof"`
}

type DBValue_Float32Value struct {
	Float32Value float32 `protobuf:"fixed32,5,opt,name=Float32Value,proto3,oneof"`
}

type DBValue_Float64Value struct {
	Float64Value float64 `protobuf:"fixed64,6,opt,name=Float64Value,proto3,oneof"`
}

type DBValue_StringValue struct {
	StringValue string `protobuf:"bytes,7,opt,name=StringValue,proto3,oneof"`
}

type DBValue_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,8,opt,name=BytesValue,proto3,oneof"`
}

type DBValue_TimeStampValue struct {
	TimeStampValue *timestamp.Timestamp `protobuf:"bytes,10,opt,name=TimeStampValue,proto3,oneof"`
}

type DBValue_NullValue struct {
	NullValue _struct.NullValue `protobuf:"varint,11,opt,name=NullValue,proto3,enum=google.protobuf.NullValue,oneof"`
}

func (*DBValue_Int32Value) isDBValue_DBType() {}

func (*DBValue_Int64Value) isDBValue_DBType() {}

func (*DBValue_Float32Value) isDBValue_DBType() {}

func (*DBValue_Float64Value) isDBValue_DBType() {}

func (*DBValue_StringValue) isDBValue_DBType() {}

func (*DBValue_BytesValue) isDBValue_DBType() {}

func (*DBValue_TimeStampValue) isDBValue_DBType() {}

func (*DBValue_NullValue) isDBValue_DBType() {}

func (m *DBValue) GetDBType() isDBValue_DBType {
	if m != nil {
		return m.DBType
	}
	return nil
}

func (m *DBValue) GetInt32Value() int32 {
	if x, ok := m.GetDBType().(*DBValue_Int32Value); ok {
		return x.Int32Value
	}
	return 0
}

func (m *DBValue) GetInt64Value() int64 {
	if x, ok := m.GetDBType().(*DBValue_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (m *DBValue) GetFloat32Value() float32 {
	if x, ok := m.GetDBType().(*DBValue_Float32Value); ok {
		return x.Float32Value
	}
	return 0
}

func (m *DBValue) GetFloat64Value() float64 {
	if x, ok := m.GetDBType().(*DBValue_Float64Value); ok {
		return x.Float64Value
	}
	return 0
}

func (m *DBValue) GetStringValue() string {
	if x, ok := m.GetDBType().(*DBValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *DBValue) GetBytesValue() []byte {
	if x, ok := m.GetDBType().(*DBValue_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *DBValue) GetTimeStampValue() *timestamp.Timestamp {
	if x, ok := m.GetDBType().(*DBValue_TimeStampValue); ok {
		return x.TimeStampValue
	}
	return nil
}

func (m *DBValue) GetNullValue() _struct.NullValue {
	if x, ok := m.GetDBType().(*DBValue_NullValue); ok {
		return x.NullValue
	}
	return _struct.NullValue_NULL_VALUE
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DBValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DBValue_Int32Value)(nil),
		(*DBValue_Int64Value)(nil),
		(*DBValue_Float32Value)(nil),
		(*DBValue_Float64Value)(nil),
		(*DBValue_StringValue)(nil),
		(*DBValue_BytesValue)(nil),
		(*DBValue_TimeStampValue)(nil),
		(*DBValue_NullValue)(nil),
	}
}

type Row struct {
	Columns              []*DBValue `protobuf:"bytes,1,rep,name=Columns,proto3" json:"Columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{7}
}

func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetColumns() []*DBValue {
	if m != nil {
		return m.Columns
	}
	return nil
}

type RowData struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RowData) Reset()         { *m = RowData{} }
func (m *RowData) String() string { return proto.CompactTextString(m) }
func (*RowData) ProtoMessage()    {}
func (*RowData) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{8}
}

func (m *RowData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RowData.Unmarshal(m, b)
}
func (m *RowData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RowData.Marshal(b, m, deterministic)
}
func (m *RowData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RowData.Merge(m, src)
}
func (m *RowData) XXX_Size() int {
	return xxx_messageInfo_RowData.Size(m)
}
func (m *RowData) XXX_DiscardUnknown() {
	xxx_messageInfo_RowData.DiscardUnknown(m)
}

var xxx_messageInfo_RowData proto.InternalMessageInfo

func (m *RowData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Write service Request message
type WriteRequest struct {
	Session              *Session   `protobuf:"bytes,1,opt,name=Session,proto3" json:"Session,omitempty"`
	Rows                 []*RowData `protobuf:"bytes,2,rep,name=Rows,proto3" json:"Rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{9}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *WriteRequest) GetRows() []*RowData {
	if m != nil {
		return m.Rows
	}
	return nil
}

// Close service Response message
type TransferStats struct {
	SuccessCount         int64    `protobuf:"varint,1,opt,name=SuccessCount,proto3" json:"SuccessCount,omitempty"`
	ErrorCount           int64    `protobuf:"varint,2,opt,name=ErrorCount,proto3" json:"ErrorCount,omitempty"`
	ErrorRows            []string `protobuf:"bytes,3,rep,name=ErrorRows,proto3" json:"ErrorRows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferStats) Reset()         { *m = TransferStats{} }
func (m *TransferStats) String() string { return proto.CompactTextString(m) }
func (*TransferStats) ProtoMessage()    {}
func (*TransferStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{10}
}

func (m *TransferStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferStats.Unmarshal(m, b)
}
func (m *TransferStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferStats.Marshal(b, m, deterministic)
}
func (m *TransferStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferStats.Merge(m, src)
}
func (m *TransferStats) XXX_Size() int {
	return xxx_messageInfo_TransferStats.Size(m)
}
func (m *TransferStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferStats.DiscardUnknown(m)
}

var xxx_messageInfo_TransferStats proto.InternalMessageInfo

func (m *TransferStats) GetSuccessCount() int64 {
	if m != nil {
		return m.SuccessCount
	}
	return 0
}

func (m *TransferStats) GetErrorCount() int64 {
	if m != nil {
		return m.ErrorCount
	}
	return 0
}

func (m *TransferStats) GetErrorRows() []string {
	if m != nil {
		return m.ErrorRows
	}
	return nil
}

// Close service Request message
type CloseRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{11}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

func (m *CloseRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

// ListSchema service request message
type ListSchemaRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=Session,proto3" json:"Session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSchemaRequest) Reset()         { *m = ListSchemaRequest{} }
func (m *ListSchemaRequest) String() string { return proto.CompactTextString(m) }
func (*ListSchemaRequest) ProtoMessage()    {}
func (*ListSchemaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{12}
}

func (m *ListSchemaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSchemaRequest.Unmarshal(m, b)
}
func (m *ListSchemaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSchemaRequest.Marshal(b, m, deterministic)
}
func (m *ListSchemaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSchemaRequest.Merge(m, src)
}
func (m *ListSchemaRequest) XXX_Size() int {
	return xxx_messageInfo_ListSchemaRequest.Size(m)
}
func (m *ListSchemaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSchemaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSchemaRequest proto.InternalMessageInfo

func (m *ListSchemaRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type Schema struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=Owner,proto3" json:"Owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schema) Reset()         { *m = Schema{} }
func (m *Schema) String() string { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()    {}
func (*Schema) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{13}
}

func (m *Schema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema.Unmarshal(m, b)
}
func (m *Schema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema.Marshal(b, m, deterministic)
}
func (m *Schema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema.Merge(m, src)
}
func (m *Schema) XXX_Size() int {
	return xxx_messageInfo_Schema.Size(m)
}
func (m *Schema) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema.DiscardUnknown(m)
}

var xxx_messageInfo_Schema proto.InternalMessageInfo

func (m *Schema) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Schema) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

// ListSchema service response message
type Schemas struct {
	Schemas              []*Schema `protobuf:"bytes,1,rep,name=Schemas,proto3" json:"Schemas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Schemas) Reset()         { *m = Schemas{} }
func (m *Schemas) String() string { return proto.CompactTextString(m) }
func (*Schemas) ProtoMessage()    {}
func (*Schemas) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{14}
}

func (m *Schemas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schemas.Unmarshal(m, b)
}
func (m *Schemas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schemas.Marshal(b, m, deterministic)
}
func (m *Schemas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schemas.Merge(m, src)
}
func (m *Schemas) XXX_Size() int {
	return xxx_messageInfo_Schemas.Size(m)
}
func (m *Schemas) XXX_DiscardUnknown() {
	xxx_messageInfo_Schemas.DiscardUnknown(m)
}

var xxx_messageInfo_Schemas proto.InternalMessageInfo

func (m *Schemas) GetSchemas() []*Schema {
	if m != nil {
		return m.Schemas
	}
	return nil
}

// ListTable service request message
type ListTableRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=Session,proto3" json:"Session,omitempty"`
	Schema               string   `protobuf:"bytes,2,opt,name=Schema,proto3" json:"Schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTableRequest) Reset()         { *m = ListTableRequest{} }
func (m *ListTableRequest) String() string { return proto.CompactTextString(m) }
func (*ListTableRequest) ProtoMessage()    {}
func (*ListTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{15}
}

func (m *ListTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTableRequest.Unmarshal(m, b)
}
func (m *ListTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTableRequest.Marshal(b, m, deterministic)
}
func (m *ListTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTableRequest.Merge(m, src)
}
func (m *ListTableRequest) XXX_Size() int {
	return xxx_messageInfo_ListTableRequest.Size(m)
}
func (m *ListTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTableRequest proto.InternalMessageInfo

func (m *ListTableRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *ListTableRequest) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

// DescribeTable service request message
type DescribeTableRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=Session,proto3" json:"Session,omitempty"`
	SchemaName           string   `protobuf:"bytes,2,opt,name=SchemaName,proto3" json:"SchemaName,omitempty"`
	TableName            string   `protobuf:"bytes,3,opt,name=TableName,proto3" json:"TableName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeTableRequest) Reset()         { *m = DescribeTableRequest{} }
func (m *DescribeTableRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeTableRequest) ProtoMessage()    {}
func (*DescribeTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{16}
}

func (m *DescribeTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTableRequest.Unmarshal(m, b)
}
func (m *DescribeTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTableRequest.Marshal(b, m, deterministic)
}
func (m *DescribeTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTableRequest.Merge(m, src)
}
func (m *DescribeTableRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeTableRequest.Size(m)
}
func (m *DescribeTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTableRequest proto.InternalMessageInfo

func (m *DescribeTableRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *DescribeTableRequest) GetSchemaName() string {
	if m != nil {
		return m.SchemaName
	}
	return ""
}

func (m *DescribeTableRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

type TableInfo struct {
	Name                 string       `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type                 RelationType `protobuf:"varint,2,opt,name=Type,proto3,enum=api.RelationType" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TableInfo) Reset()         { *m = TableInfo{} }
func (m *TableInfo) String() string { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()    {}
func (*TableInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{17}
}

func (m *TableInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableInfo.Unmarshal(m, b)
}
func (m *TableInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableInfo.Marshal(b, m, deterministic)
}
func (m *TableInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableInfo.Merge(m, src)
}
func (m *TableInfo) XXX_Size() int {
	return xxx_messageInfo_TableInfo.Size(m)
}
func (m *TableInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TableInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TableInfo proto.InternalMessageInfo

func (m *TableInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TableInfo) GetType() RelationType {
	if m != nil {
		return m.Type
	}
	return RelationType_Table
}

// ListTable service response message
type Tables struct {
	Tables               []*TableInfo `protobuf:"bytes,1,rep,name=Tables,proto3" json:"Tables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Tables) Reset()         { *m = Tables{} }
func (m *Tables) String() string { return proto.CompactTextString(m) }
func (*Tables) ProtoMessage()    {}
func (*Tables) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{18}
}

func (m *Tables) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tables.Unmarshal(m, b)
}
func (m *Tables) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tables.Marshal(b, m, deterministic)
}
func (m *Tables) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tables.Merge(m, src)
}
func (m *Tables) XXX_Size() int {
	return xxx_messageInfo_Tables.Size(m)
}
func (m *Tables) XXX_DiscardUnknown() {
	xxx_messageInfo_Tables.DiscardUnknown(m)
}

var xxx_messageInfo_Tables proto.InternalMessageInfo

func (m *Tables) GetTables() []*TableInfo {
	if m != nil {
		return m.Tables
	}
	return nil
}

// DescribeTable service response message
type Columns struct {
	Columns              []*ColumnInfo `protobuf:"bytes,1,rep,name=Columns,proto3" json:"Columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Columns) Reset()         { *m = Columns{} }
func (m *Columns) String() string { return proto.CompactTextString(m) }
func (*Columns) ProtoMessage()    {}
func (*Columns) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{19}
}

func (m *Columns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Columns.Unmarshal(m, b)
}
func (m *Columns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Columns.Marshal(b, m, deterministic)
}
func (m *Columns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Columns.Merge(m, src)
}
func (m *Columns) XXX_Size() int {
	return xxx_messageInfo_Columns.Size(m)
}
func (m *Columns) XXX_DiscardUnknown() {
	xxx_messageInfo_Columns.DiscardUnknown(m)
}

var xxx_messageInfo_Columns proto.InternalMessageInfo

func (m *Columns) GetColumns() []*ColumnInfo {
	if m != nil {
		return m.Columns
	}
	return nil
}

type ColumnInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	DatabaseType         string   `protobuf:"bytes,2,opt,name=DatabaseType,proto3" json:"DatabaseType,omitempty"`
	HasLength            bool     `protobuf:"varint,3,opt,name=HasLength,proto3" json:"HasLength,omitempty"`
	Length               int64    `protobuf:"varint,4,opt,name=Length,proto3" json:"Length,omitempty"`
	HasPrecisionScale    bool     `protobuf:"varint,5,opt,name=HasPrecisionScale,proto3" json:"HasPrecisionScale,omitempty"`
	Precision            int64    `protobuf:"varint,6,opt,name=Precision,proto3" json:"Precision,omitempty"`
	Scale                int64    `protobuf:"varint,7,opt,name=Scale,proto3" json:"Scale,omitempty"`
	HasNullable          bool     `protobuf:"varint,8,opt,name=HasNullable,proto3" json:"HasNullable,omitempty"`
	Nullable             bool     `protobuf:"varint,9,opt,name=Nullable,proto3" json:"Nullable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ColumnInfo) Reset()         { *m = ColumnInfo{} }
func (m *ColumnInfo) String() string { return proto.CompactTextString(m) }
func (*ColumnInfo) ProtoMessage()    {}
func (*ColumnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_746f58d562b6d0c8, []int{20}
}

func (m *ColumnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnInfo.Unmarshal(m, b)
}
func (m *ColumnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnInfo.Marshal(b, m, deterministic)
}
func (m *ColumnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnInfo.Merge(m, src)
}
func (m *ColumnInfo) XXX_Size() int {
	return xxx_messageInfo_ColumnInfo.Size(m)
}
func (m *ColumnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnInfo proto.InternalMessageInfo

func (m *ColumnInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ColumnInfo) GetDatabaseType() string {
	if m != nil {
		return m.DatabaseType
	}
	return ""
}

func (m *ColumnInfo) GetHasLength() bool {
	if m != nil {
		return m.HasLength
	}
	return false
}

func (m *ColumnInfo) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ColumnInfo) GetHasPrecisionScale() bool {
	if m != nil {
		return m.HasPrecisionScale
	}
	return false
}

func (m *ColumnInfo) GetPrecision() int64 {
	if m != nil {
		return m.Precision
	}
	return 0
}

func (m *ColumnInfo) GetScale() int64 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *ColumnInfo) GetHasNullable() bool {
	if m != nil {
		return m.HasNullable
	}
	return false
}

func (m *ColumnInfo) GetNullable() bool {
	if m != nil {
		return m.Nullable
	}
	return false
}

func init() {
	proto.RegisterEnum("api.Operation", Operation_name, Operation_value)
	proto.RegisterEnum("api.RelationType", RelationType_name, RelationType_value)
	proto.RegisterType((*ConnectRequest)(nil), "api.ConnectRequest")
	proto.RegisterType((*Session)(nil), "api.Session")
	proto.RegisterType((*InsertOption)(nil), "api.InsertOption")
	proto.RegisterType((*UpdateOption)(nil), "api.UpdateOption")
	proto.RegisterType((*MergeOption)(nil), "api.MergeOption")
	proto.RegisterType((*OpenRequest)(nil), "api.OpenRequest")
	proto.RegisterType((*DBValue)(nil), "api.DBValue")
	proto.RegisterType((*Row)(nil), "api.Row")
	proto.RegisterType((*RowData)(nil), "api.RowData")
	proto.RegisterType((*WriteRequest)(nil), "api.WriteRequest")
	proto.RegisterType((*TransferStats)(nil), "api.TransferStats")
	proto.RegisterType((*CloseRequest)(nil), "api.CloseRequest")
	proto.RegisterType((*ListSchemaRequest)(nil), "api.ListSchemaRequest")
	proto.RegisterType((*Schema)(nil), "api.Schema")
	proto.RegisterType((*Schemas)(nil), "api.Schemas")
	proto.RegisterType((*ListTableRequest)(nil), "api.ListTableRequest")
	proto.RegisterType((*DescribeTableRequest)(nil), "api.DescribeTableRequest")
	proto.RegisterType((*TableInfo)(nil), "api.TableInfo")
	proto.RegisterType((*Tables)(nil), "api.Tables")
	proto.RegisterType((*Columns)(nil), "api.Columns")
	proto.RegisterType((*ColumnInfo)(nil), "api.ColumnInfo")
}

func init() { proto.RegisterFile("gpss.proto", fileDescriptor_746f58d562b6d0c8) }

var fileDescriptor_746f58d562b6d0c8 = []byte{
	// 1313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xf7, 0xf9, 0xbf, 0xc7, 0x6e, 0xea, 0x2e, 0x25, 0x72, 0x4d, 0x01, 0xeb, 0xd4, 0x56, 0xa1,
	0x02, 0xb7, 0xa4, 0x51, 0x8b, 0xca, 0x9b, 0xe3, 0x16, 0x47, 0x4a, 0x1b, 0xb3, 0x97, 0x14, 0x5e,
	0x37, 0xe7, 0x8d, 0x73, 0x92, 0x7d, 0x77, 0xbd, 0x5d, 0x2b, 0x54, 0xe2, 0x83, 0x20, 0xbe, 0x03,
	0x4f, 0xbc, 0xf0, 0x41, 0xf8, 0x16, 0x7c, 0x02, 0x9e, 0x40, 0x33, 0xbb, 0x77, 0xbe, 0x4b, 0xa2,
	0xd0, 0x80, 0x78, 0xf2, 0xcd, 0x6f, 0x66, 0xf6, 0x66, 0x76, 0xf6, 0xf7, 0xdb, 0x33, 0xc0, 0x3c,
	0x56, 0x6a, 0x18, 0x27, 0x91, 0x8e, 0x58, 0x45, 0xc4, 0x41, 0xff, 0xa3, 0x79, 0x14, 0xcd, 0x17,
	0xf2, 0x11, 0x41, 0xc7, 0xab, 0x93, 0x47, 0x72, 0x19, 0xeb, 0x77, 0x26, 0xa2, 0x7f, 0xf7, 0xbc,
	0x53, 0xe9, 0x64, 0xe5, 0x6b, 0xeb, 0xfd, 0xf4, 0xbc, 0x57, 0x07, 0x4b, 0xa9, 0xb4, 0x58, 0xc6,
	0x26, 0xc0, 0xfd, 0xc9, 0x81, 0x8d, 0xdd, 0x28, 0x0c, 0xa5, 0xaf, 0xb9, 0x7c, 0xbb, 0x92, 0x4a,
	0x33, 0x06, 0xd5, 0x49, 0xa4, 0x74, 0xcf, 0x19, 0x38, 0x5b, 0x2d, 0x4e, 0xcf, 0x88, 0x4d, 0xa3,
	0x44, 0xf7, 0xca, 0x03, 0x67, 0xab, 0xc6, 0xe9, 0x99, 0xf5, 0xa1, 0x79, 0xa4, 0x64, 0x12, 0x8a,
	0xa5, 0xec, 0x55, 0x28, 0x36, 0xb3, 0xd1, 0x37, 0x15, 0x4a, 0x9d, 0x45, 0xc9, 0xac, 0x57, 0x35,
	0xbe, 0xd4, 0x66, 0x1b, 0x50, 0x1e, 0x8f, 0x7a, 0x35, 0x42, 0xcb, 0xe3, 0x11, 0xdb, 0x84, 0xfa,
	0x91, 0x92, 0x9e, 0xb7, 0xdf, 0xab, 0x0f, 0x9c, 0xad, 0x26, 0xb7, 0x96, 0x7b, 0x07, 0x1a, 0x9e,
	0x54, 0x2a, 0x88, 0x42, 0x4c, 0xd9, 0x1b, 0xdb, 0x82, 0xca, 0x7b, 0x63, 0xf7, 0x37, 0x07, 0x3a,
	0x7b, 0xa1, 0x92, 0x89, 0x3e, 0x88, 0x35, 0x06, 0xdc, 0x83, 0x1b, 0xc6, 0xde, 0x8d, 0x16, 0xab,
	0x65, 0xa8, 0x7a, 0xce, 0xa0, 0xb2, 0xd5, 0xe2, 0x45, 0x10, 0xa3, 0x0e, 0x93, 0x55, 0xe8, 0x0b,
	0x2d, 0x0f, 0xc5, 0xf1, 0x42, 0x52, 0x3b, 0x4d, 0x5e, 0x04, 0xd9, 0x16, 0xdc, 0x7c, 0x91, 0x24,
	0x51, 0xb2, 0x1f, 0x2c, 0x03, 0xbd, 0x1b, 0xad, 0x42, 0x4d, 0x2d, 0x54, 0xf8, 0x79, 0x98, 0x6d,
	0xc3, 0xed, 0x35, 0x34, 0x95, 0x89, 0x2f, 0x43, 0x2d, 0xe6, 0x92, 0x7a, 0xab, 0xf1, 0x4b, 0x7d,
	0xee, 0xef, 0x0e, 0x74, 0x8e, 0xe2, 0x99, 0xd0, 0xd2, 0x96, 0xee, 0x42, 0xe7, 0x95, 0xd0, 0xfe,
	0x69, 0xb1, 0xf2, 0x02, 0x86, 0x85, 0x9b, 0x9c, 0x34, 0xa8, 0x6c, 0xda, 0x2b, 0x80, 0xec, 0x2e,
	0xb4, 0x76, 0xa3, 0x70, 0x16, 0xe0, 0xb2, 0x76, 0x22, 0x6b, 0xe0, 0x7f, 0x6e, 0xeb, 0x4f, 0x07,
	0xda, 0xaf, 0x64, 0x32, 0x97, 0xd7, 0x1a, 0xc8, 0xf9, 0xde, 0xcb, 0xef, 0xd3, 0x7b, 0xe5, 0x1f,
	0x7b, 0xaf, 0xbe, 0x47, 0xef, 0xb5, 0xeb, 0xf5, 0x5e, 0xbf, 0xa2, 0xf7, 0x5f, 0x2b, 0xd0, 0x3e,
	0x88, 0x65, 0x98, 0x12, 0xe8, 0x41, 0x76, 0x70, 0xe9, 0xc8, 0xb6, 0xb7, 0x3b, 0x43, 0x11, 0x07,
	0x43, 0x8b, 0xf1, 0xec, 0x54, 0x7f, 0x02, 0xe0, 0xf9, 0xa7, 0x72, 0x29, 0x5e, 0x23, 0x85, 0xca,
	0x54, 0x74, 0x0e, 0xc1, 0x9e, 0xe8, 0x44, 0xbe, 0x5e, 0x33, 0x6c, 0x0d, 0x20, 0x6d, 0xa6, 0x89,
	0xf4, 0xbe, 0xdd, 0xb7, 0xed, 0x5a, 0x8b, 0xf5, 0xa0, 0x31, 0x8d, 0x94, 0x46, 0x87, 0xe1, 0x58,
	0x6a, 0xa2, 0xe7, 0x30, 0x58, 0xca, 0x68, 0xa5, 0x6d, 0x3b, 0xa9, 0x89, 0x74, 0x7d, 0x11, 0xfa,
	0xd1, 0x2c, 0x08, 0xe7, 0xbd, 0x86, 0xa1, 0x6b, 0x6a, 0xe3, 0xfe, 0x7b, 0x5a, 0xcc, 0x83, 0x70,
	0x6e, 0x4a, 0xeb, 0x35, 0x29, 0xa0, 0x08, 0xb2, 0x67, 0x45, 0x42, 0xf6, 0x66, 0xd4, 0xf8, 0x2d,
	0x6a, 0x3c, 0xef, 0x98, 0x94, 0x78, 0x91, 0xb9, 0xcf, 0x8a, 0x74, 0xe8, 0xc9, 0x5c, 0x62, 0xde,
	0x81, 0x89, 0x05, 0xde, 0xec, 0x14, 0x0e, 0x5c, 0xef, 0x84, 0xf2, 0xba, 0x94, 0x97, 0xc3, 0x27,
	0x25, 0x9e, 0x0f, 0x1b, 0x35, 0xa1, 0x6e, 0x9e, 0xdc, 0x3f, 0xca, 0xd0, 0x18, 0x8f, 0xde, 0x88,
	0xc5, 0x4a, 0xb2, 0x01, 0xc0, 0x5e, 0xa8, 0x9f, 0x6c, 0x93, 0x45, 0x43, 0xab, 0x4d, 0x4a, 0x3c,
	0x87, 0xd9, 0x88, 0xa7, 0x3b, 0x26, 0x02, 0x67, 0x55, 0xb1, 0x11, 0x16, 0x63, 0xf7, 0xa0, 0xf3,
	0x72, 0x11, 0x89, 0x6c, 0x15, 0xdc, 0xfc, 0x32, 0x56, 0x9d, 0x47, 0xb3, 0xa8, 0x74, 0x25, 0x1c,
	0x84, 0x93, 0x45, 0xa5, 0x6b, 0xb9, 0xd0, 0xf6, 0x74, 0x12, 0x84, 0x73, 0x13, 0x44, 0x23, 0xc1,
	0x4e, 0x72, 0x20, 0x56, 0x34, 0x7a, 0xa7, 0xa5, 0x32, 0x21, 0x38, 0x94, 0x0e, 0x56, 0xb4, 0xc6,
	0xd8, 0x18, 0x36, 0x70, 0xc0, 0x1e, 0xca, 0xbd, 0x89, 0x02, 0xda, 0xa4, 0xfe, 0xd0, 0xdc, 0x0a,
	0xc3, 0xf4, 0x56, 0x18, 0x1e, 0xa6, 0xb7, 0xc2, 0xa4, 0xc4, 0xcf, 0xe5, 0xb0, 0xe7, 0xd0, 0x7a,
	0xbd, 0x5a, 0x2c, 0xcc, 0x02, 0xed, 0x81, 0xb3, 0xb5, 0x71, 0xc9, 0x02, 0x59, 0xc4, 0xa4, 0xc4,
	0xd7, 0xe1, 0xb8, 0xdb, 0xe3, 0xd1, 0xe1, 0xbb, 0x58, 0xba, 0x5f, 0x40, 0x85, 0x47, 0x67, 0x48,
	0x8d, 0xbc, 0x20, 0xa4, 0xd4, 0xb0, 0x73, 0xe0, 0xa9, 0xd3, 0xfd, 0x18, 0x1a, 0x3c, 0x3a, 0x1b,
	0x0b, 0x2d, 0xf0, 0xea, 0xc1, 0x5f, 0x9a, 0x4a, 0x87, 0xd3, 0xb3, 0xfb, 0x3d, 0x74, 0xbe, 0x4b,
	0x02, 0x2d, 0xaf, 0xcb, 0xb8, 0x01, 0x54, 0x79, 0x74, 0x66, 0x74, 0x26, 0x0d, 0xb2, 0xef, 0xe1,
	0xe4, 0x71, 0xdf, 0xe2, 0x15, 0x21, 0x42, 0x75, 0x22, 0x13, 0x4f, 0x0b, 0x4d, 0x12, 0xe5, 0xad,
	0x7c, 0x5f, 0x2a, 0x65, 0x74, 0xc3, 0x21, 0xdd, 0x28, 0x60, 0x48, 0x64, 0x12, 0x06, 0x13, 0x41,
	0x87, 0x83, 0xe7, 0x10, 0x24, 0x32, 0x59, 0xf4, 0x6e, 0x23, 0x5f, 0x6b, 0xc0, 0x7d, 0x0a, 0x9d,
	0xdd, 0x45, 0xa4, 0xf2, 0xcd, 0xa8, 0xab, 0x9a, 0xb1, 0x4e, 0xf7, 0x6b, 0xb8, 0xb5, 0x1f, 0x28,
	0x6d, 0x08, 0x78, 0xcd, 0x9d, 0x70, 0xb7, 0xa1, 0x6e, 0x99, 0xcb, 0xa0, 0x4a, 0x02, 0x63, 0xaf,
	0x7b, 0xd2, 0x96, 0xdb, 0x50, 0x3b, 0x38, 0x0b, 0x65, 0x62, 0x45, 0xc9, 0x18, 0xee, 0x63, 0x68,
	0x98, 0x1c, 0xc5, 0xee, 0x67, 0x8f, 0x76, 0x8e, 0x6d, 0xf3, 0x1a, 0x53, 0x4b, 0xea, 0x73, 0x39,
	0x74, 0xb1, 0x44, 0x12, 0xad, 0xeb, 0xce, 0x6a, 0x33, 0xad, 0xd0, 0x16, 0x61, 0x2d, 0xf7, 0x47,
	0xb8, 0x3d, 0x96, 0xca, 0x4f, 0x82, 0x63, 0xf9, 0xaf, 0xd6, 0xfd, 0x4f, 0xaa, 0xeb, 0xbe, 0xb4,
	0xde, 0xbd, 0xf0, 0x24, 0xba, 0x74, 0xeb, 0xee, 0x43, 0x15, 0x0f, 0x3c, 0x2d, 0xbc, 0x61, 0x75,
	0x8c, 0xcb, 0x85, 0x40, 0xcd, 0x41, 0x07, 0x27, 0xb7, 0xfb, 0x18, 0xea, 0xb4, 0x8e, 0x62, 0x0f,
	0xd2, 0x27, 0xbb, 0x93, 0x1b, 0x94, 0x92, 0xbd, 0x84, 0x5b, 0xaf, 0xbb, 0x93, 0x51, 0x87, 0x7d,
	0x76, 0x9e, 0x45, 0x37, 0x29, 0xc7, 0x60, 0x94, 0x94, 0x11, 0xe9, 0xe7, 0x32, 0xc0, 0x1a, 0xbf,
	0xb4, 0x62, 0x17, 0x3a, 0x48, 0x80, 0x63, 0xa1, 0x64, 0x56, 0x79, 0x8b, 0x17, 0x30, 0xdc, 0x94,
	0x89, 0x50, 0xfb, 0x32, 0x9c, 0xeb, 0x53, 0xda, 0x94, 0x26, 0x5f, 0x03, 0x38, 0x2a, 0xeb, 0x32,
	0x5f, 0x14, 0xd6, 0x62, 0x9f, 0xc3, 0xad, 0x89, 0x50, 0xd3, 0x44, 0xfa, 0x01, 0x6e, 0xbd, 0xe7,
	0x8b, 0x85, 0xd1, 0xc5, 0x26, 0xbf, 0xe8, 0xc0, 0x77, 0x64, 0x08, 0xe9, 0x62, 0x85, 0xaf, 0x01,
	0x3c, 0x92, 0x26, 0xbf, 0x41, 0x1e, 0x63, 0xb0, 0x01, 0xb4, 0x27, 0x42, 0xa1, 0xe0, 0xd0, 0xf7,
	0x5c, 0x93, 0xd6, 0xce, 0x43, 0x78, 0xb5, 0x65, 0xee, 0x16, 0xb9, 0x33, 0xfb, 0xe1, 0x57, 0xd0,
	0x3a, 0x88, 0x65, 0x42, 0xb3, 0x61, 0x00, 0x75, 0x73, 0x31, 0x75, 0x4b, 0xac, 0x05, 0x35, 0xba,
	0x34, 0xba, 0x0e, 0xc2, 0xe6, 0xda, 0xe9, 0x96, 0x59, 0x13, 0xaa, 0x5c, 0x8a, 0x59, 0xb7, 0xf2,
	0xf0, 0x08, 0x3a, 0xf9, 0xa1, 0x62, 0x02, 0x8d, 0xa9, 0x5b, 0xc2, 0xa0, 0x37, 0x81, 0x3c, 0xeb,
	0x3a, 0x08, 0xee, 0x85, 0x33, 0xf9, 0x43, 0xb7, 0xcc, 0x3a, 0xd0, 0xf4, 0xf0, 0x9c, 0x86, 0xbe,
	0xec, 0x56, 0x58, 0x1b, 0x1a, 0x5e, 0x2c, 0xfd, 0x40, 0x2c, 0xba, 0x55, 0x06, 0x50, 0x3b, 0xd0,
	0xa7, 0x32, 0xe9, 0xfe, 0xe5, 0x6c, 0xff, 0x52, 0x81, 0xea, 0x37, 0xb1, 0x52, 0x6c, 0x88, 0x13,
	0xa6, 0xaf, 0x72, 0xf6, 0x81, 0x9d, 0x6d, 0xfe, 0x1b, 0xbd, 0x5f, 0x38, 0xdb, 0x6e, 0x89, 0xed,
	0x00, 0x8c, 0x03, 0xe5, 0xdb, 0x94, 0x82, 0xb7, 0xbf, 0x79, 0x41, 0xad, 0x5f, 0xe0, 0xff, 0x07,
	0xb7, 0xc4, 0xb6, 0xa1, 0x8a, 0xdf, 0x2d, 0xcc, 0xdc, 0x9a, 0xb9, 0x4f, 0x98, 0x2b, 0x72, 0x76,
	0xa0, 0x46, 0xd2, 0xcb, 0xcc, 0xd1, 0xce, 0xcb, 0xf0, 0x15, 0x59, 0x8f, 0xa1, 0x46, 0x1a, 0x67,
	0xb3, 0xf2, 0x7a, 0xd7, 0x67, 0xe6, 0xc0, 0xe7, 0x55, 0xd7, 0x74, 0xb4, 0x56, 0x37, 0xb6, 0x49,
	0x31, 0x17, 0xe4, 0x2e, 0xdd, 0x07, 0x2b, 0x37, 0x25, 0xf6, 0x25, 0xb4, 0x32, 0xc1, 0x61, 0x1f,
	0x66, 0x49, 0x79, 0xa1, 0xe8, 0xb7, 0xd7, 0x04, 0xc3, 0x94, 0xe7, 0x70, 0xa3, 0xa0, 0x27, 0xec,
	0x8e, 0xb9, 0x92, 0x2e, 0xd1, 0x18, 0xfb, 0xba, 0x94, 0x5b, 0xa5, 0x51, 0x79, 0xea, 0x1c, 0xd7,
	0xa9, 0xd9, 0x27, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xac, 0x43, 0xdc, 0xb7, 0x0d, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GpssClient is the client API for Gpss service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GpssClient interface {
	// Establish a connection to Greenplum Database; returns a Session object
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*Session, error)
	// Disconnect, freeing all resources allocated for a session
	Disconnect(ctx context.Context, in *Session, opts ...grpc.CallOption) (*empty.Empty, error)
	// Prepare and open a table for write
	Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Write data to table
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Close a write operation
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*TransferStats, error)
	// List all available schemas in a database
	ListSchema(ctx context.Context, in *ListSchemaRequest, opts ...grpc.CallOption) (*Schemas, error)
	// List all tables and views in a schema
	ListTable(ctx context.Context, in *ListTableRequest, opts ...grpc.CallOption) (*Tables, error)
	// Decribe table metadata(column name and column type)
	DescribeTable(ctx context.Context, in *DescribeTableRequest, opts ...grpc.CallOption) (*Columns, error)
}

type gpssClient struct {
	cc *grpc.ClientConn
}

func NewGpssClient(cc *grpc.ClientConn) GpssClient {
	return &gpssClient{cc}
}

func (c *gpssClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/api.Gpss/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gpssClient) Disconnect(ctx context.Context, in *Session, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.Gpss/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gpssClient) Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.Gpss/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gpssClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.Gpss/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gpssClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*TransferStats, error) {
	out := new(TransferStats)
	err := c.cc.Invoke(ctx, "/api.Gpss/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gpssClient) ListSchema(ctx context.Context, in *ListSchemaRequest, opts ...grpc.CallOption) (*Schemas, error) {
	out := new(Schemas)
	err := c.cc.Invoke(ctx, "/api.Gpss/ListSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gpssClient) ListTable(ctx context.Context, in *ListTableRequest, opts ...grpc.CallOption) (*Tables, error) {
	out := new(Tables)
	err := c.cc.Invoke(ctx, "/api.Gpss/ListTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gpssClient) DescribeTable(ctx context.Context, in *DescribeTableRequest, opts ...grpc.CallOption) (*Columns, error) {
	out := new(Columns)
	err := c.cc.Invoke(ctx, "/api.Gpss/DescribeTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GpssServer is the server API for Gpss service.
type GpssServer interface {
	// Establish a connection to Greenplum Database; returns a Session object
	Connect(context.Context, *ConnectRequest) (*Session, error)
	// Disconnect, freeing all resources allocated for a session
	Disconnect(context.Context, *Session) (*empty.Empty, error)
	// Prepare and open a table for write
	Open(context.Context, *OpenRequest) (*empty.Empty, error)
	// Write data to table
	Write(context.Context, *WriteRequest) (*empty.Empty, error)
	// Close a write operation
	Close(context.Context, *CloseRequest) (*TransferStats, error)
	// List all available schemas in a database
	ListSchema(context.Context, *ListSchemaRequest) (*Schemas, error)
	// List all tables and views in a schema
	ListTable(context.Context, *ListTableRequest) (*Tables, error)
	// Decribe table metadata(column name and column type)
	DescribeTable(context.Context, *DescribeTableRequest) (*Columns, error)
}

func RegisterGpssServer(s *grpc.Server, srv GpssServer) {
	s.RegisterService(&_Gpss_serviceDesc, srv)
}

func _Gpss_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GpssServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Gpss/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GpssServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gpss_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GpssServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Gpss/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GpssServer).Disconnect(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gpss_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GpssServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Gpss/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GpssServer).Open(ctx, req.(*OpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gpss_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GpssServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Gpss/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GpssServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gpss_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GpssServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Gpss/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GpssServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gpss_ListSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GpssServer).ListSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Gpss/ListSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GpssServer).ListSchema(ctx, req.(*ListSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gpss_ListTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GpssServer).ListTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Gpss/ListTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GpssServer).ListTable(ctx, req.(*ListTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gpss_DescribeTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GpssServer).DescribeTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Gpss/DescribeTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GpssServer).DescribeTable(ctx, req.(*DescribeTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gpss_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Gpss",
	HandlerType: (*GpssServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Gpss_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Gpss_Disconnect_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _Gpss_Open_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _Gpss_Write_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _Gpss_Close_Handler,
		},
		{
			MethodName: "ListSchema",
			Handler:    _Gpss_ListSchema_Handler,
		},
		{
			MethodName: "ListTable",
			Handler:    _Gpss_ListTable_Handler,
		},
		{
			MethodName: "DescribeTable",
			Handler:    _Gpss_DescribeTable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gpss.proto",
}
